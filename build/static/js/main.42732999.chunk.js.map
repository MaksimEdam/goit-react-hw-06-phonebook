{"version":3,"sources":["components/App/App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts-actions.js","redux/contacts-types.js","redux/contacts-reducer.js","redux/store.js","redux/contacts-selectors.js","components/FormContact/FormContact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/FormContact/FormContact.module.css"],"names":["module","exports","contactsActions","addContacts","createAction","name","number","payload","id","nanoid","deleteContacts","changeFilter","contacts","createReducer","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","persistor","persistStore","getContacts","getFilter","getVisibleContacts","filters","contact","toLowerCase","includes","FormContact","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","resetState","onSubmit","preventDefault","map","toast","warn","className","s","inputWrapper","label","type","onChange","pattern","title","required","formButton","ContactList","contactItem","contactButton","onClick","Filter","App","wrapper","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.42732999.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3cwiN\",\"title\":\"App_title__jp8om\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__3IW1C\",\"contactButton\":\"ContactList_contactButton__1cBK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Q8jh\"};","import { createAction } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport { ADD, DELETE, CHANGE_FILTER } from './contacts-types';\n\nconst addContacts = createAction(ADD, ({ name, number }) => {\n  return {\n    payload: {\n      id: nanoid(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContacts = createAction(DELETE);\nconst changeFilter = createAction(CHANGE_FILTER);\n\nconst contactsActions = { addContacts, deleteContacts, changeFilter };\n\nexport default contactsActions;\n","export const ADD = 'contacts/add';\nexport const DELETE = 'contacts/delete';\nexport const CHANGE_FILTER = 'contacts/changeFilter';\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst contacts = createReducer(initialState, {\n  [contactsActions.addContacts]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [contactsActions.deleteContacts]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ contacts, filter });\n","import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: { contacts: persistReducer(contactsPersistConfig, contactsReducer) },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state.contacts);\n  const filters = state.contacts.filter;\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filters.toLowerCase()),\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport contactsActions from '../../redux/contacts-actions';\nimport { getContacts } from '../../redux/contacts-selectors';\nimport s from './FormContact.module.css';\n\nfunction FormContact() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    contacts.contacts.map(contact => contact.name).includes(name)\n      ? toast.warn(`${name} is already in your phonebook`)\n      : dispatch(contactsActions.addContacts({ name, number }));\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"test3\">\n      <div className={s.inputWrapper}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n      </div>\n      <div className={s.inputWrapper}>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            value={number}\n            onChange={handleChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </div>\n      <button className={s.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default FormContact;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactItem}>\n          <p>{name}</p>\n          <p>{number}</p>\n          <button\n            className={s.contactButton}\n            type=\"button\"\n            onClick={() => {\n              dispatch(contactsActions.deleteContacts(id));\n              toast('Deleted');\n            }}\n          >\n            Delete contact\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport contactsActions from '../../redux/contacts-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(contactsActions.changeFilter(e.target.value));\n  };\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" value={filter} onChange={onChange} />\n    </label>\n  );\n}\n\nexport default Filter;\n","import FormContact from '../FormContact';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport s from './App.module.css';\n\nexport default function App() {\n  return (\n    <div className={s.wrapper}>\n      <h1 className={s.title}>Phonebook</h1>\n      <FormContact />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter value={getFilter} />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"FormContact_inputWrapper__-xSex\",\"label\":\"FormContact_label__1oPLh\",\"formButton\":\"FormContact_formButton__3Stds\"};"],"sourceRoot":""}